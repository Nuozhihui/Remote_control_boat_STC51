C51 COMPILER V9.60.0.0   OLED                                                              03/15/2022 22:42:11 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\oled.obj
COMPILER INVOKED BY: D:\Code\ARM\C51\BIN\C51.EXE ..\Common\oled.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include)
                    - DEBUG PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\oled.obj)

line level    source

   1          /*
   2          
   3              GT-24 V1.0 (RF24L01) 测试开发程序
   4          
   5              编者：果云科技有限公司
   6            淘宝店铺:https://shop532831232.taobao.com
   7            
   8            适用芯片：89C52
   9            
  10            线路连接：  RF24L01： VCC        3.3V
  11                         GND        GND
  12                        CE        P1^0
  13                       IRQ        P1^5
  14                                   CSN        P1^3
  15                         SCK        P1^1
  16                      MOSI        P1^4
  17                      MISO        P1^2
  18                      
  19                  OLED(IIC):  VCC        3.3V
  20                          GND        GND
  21                      SCL        P1^6
  22                      SDA        P1^7
  23                      
  24              最后修改时间；2018年8月1日 12:00:00
  25          
  26          */
  27          #include "oled.h"
  28          //#include "stdlib.h"
  29          #include "oledfont.h"    
  30          //#include "delay.h"
  31          //OLED的显存
  32          //存放格式如下.
  33          //[0]0 1 2 3 ... 127  
  34          //[1]0 1 2 3 ... 127  
  35          //[2]0 1 2 3 ... 127  
  36          //[3]0 1 2 3 ... 127  
  37          //[4]0 1 2 3 ... 127  
  38          //[5]0 1 2 3 ... 127  
  39          //[6]0 1 2 3 ... 127  
  40          //[7]0 1 2 3 ... 127         
  41          //void delay_ms(unsigned int ms)
  42          //{                         
  43          //  unsigned int a;
  44          //  while(ms)
  45          //  {
  46          //    a=1800;
  47          //    while(a--);
  48          //    ms--;
  49          //  }
  50          //  return;
  51          //}
  52          /**********************************************
  53          //IIC Start
  54          **********************************************/
C51 COMPILER V9.60.0.0   OLED                                                              03/15/2022 22:42:11 PAGE 2   

  55          void IIC_Start()
  56          {
  57   1      
  58   1        OLED_SCLK_Set() ;
  59   1        OLED_SDIN_Set();
  60   1        OLED_SDIN_Clr();
  61   1        OLED_SCLK_Clr();
  62   1      }
  63          
  64          /**********************************************
  65          //IIC Stop
  66          **********************************************/
  67          void IIC_Stop()
  68          {
  69   1      OLED_SCLK_Set() ;
  70   1      //  OLED_SCLK_Clr();
  71   1        OLED_SDIN_Clr();
  72   1        OLED_SDIN_Set();
  73   1        
  74   1      }
  75          
  76          void IIC_Wait_Ack()
  77          {
  78   1      
  79   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
  80   1        //GPIOB->CRH |= 0x00080000;
  81   1      //  OLED_SDA = 1;
  82   1      //  delay_us(1);
  83   1        //OLED_SCL = 1;
  84   1        //delay_us(50000);
  85   1      /*  while(1)
  86   1        {
  87   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  88   1          {
  89   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  90   1            //GPIOB->CRH |= 0x00030000;
  91   1            return;
  92   1          }
  93   1        }
  94   1      */
  95   1        OLED_SCLK_Set() ;
  96   1        OLED_SCLK_Clr();
  97   1      }
  98          /**********************************************
  99          // IIC Write byte
 100          **********************************************/
 101          
 102          void Write_IIC_Byte(unsigned char IIC_Byte)
 103          {
 104   1        unsigned char i;
 105   1        unsigned char m,da;
 106   1        da=IIC_Byte;
 107   1        OLED_SCLK_Clr();
 108   1        for(i=0;i<8;i++)    
 109   1        {
 110   2            m=da;
 111   2          //  OLED_SCLK_Clr();
 112   2          m=m&0x80;
 113   2          if(m==0x80)
 114   2          {OLED_SDIN_Set();}
 115   2          else OLED_SDIN_Clr();
 116   2            da=da<<1;
C51 COMPILER V9.60.0.0   OLED                                                              03/15/2022 22:42:11 PAGE 3   

 117   2          OLED_SCLK_Set();
 118   2          OLED_SCLK_Clr();
 119   2          }
 120   1      
 121   1      
 122   1      }
 123          /**********************************************
 124          // IIC Write Command      
 125          **********************************************/
 126          void Write_IIC_Command(unsigned char IIC_Command)
 127          {
 128   1         IIC_Start();
 129   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 130   1        IIC_Wait_Ack(); 
 131   1         Write_IIC_Byte(0x00);      //write command
 132   1        IIC_Wait_Ack(); 
 133   1         Write_IIC_Byte(IIC_Command); 
 134   1        IIC_Wait_Ack(); 
 135   1         IIC_Stop();
 136   1      }
 137          /**********************************************
 138          // IIC Write Data
 139          **********************************************/
 140          void Write_IIC_Data(unsigned char IIC_Data)       
 141          {
 142   1         IIC_Start();
 143   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
 144   1        IIC_Wait_Ack(); 
 145   1         Write_IIC_Byte(0x40);      //write data
 146   1        IIC_Wait_Ack(); 
 147   1         Write_IIC_Byte(IIC_Data);
 148   1        IIC_Wait_Ack(); 
 149   1         IIC_Stop();
 150   1      }
 151          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 152          {
 153   1        if(cmd)
 154   1            {
 155   2      
 156   2         Write_IIC_Data(dat);
 157   2         
 158   2          }
 159   1        else {
 160   2         Write_IIC_Command(dat);
 161   2          
 162   2        }
 163   1      
 164   1      
 165   1      }
 166          
 167          /********************************************
 168          // fill_Picture
 169          ********************************************/
 170          void fill_picture(unsigned char fill_Data)
 171          {
 172   1        unsigned char m,n;
 173   1        for(m=0;m<8;m++)
 174   1        {
 175   2          OLED_WR_Byte(0xb0+m,0);   //page0-page1
 176   2          OLED_WR_Byte(0x00,0);   //low column start address
 177   2          OLED_WR_Byte(0x10,0);   //high column start address
 178   2          for(n=0;n<128;n++)
C51 COMPILER V9.60.0.0   OLED                                                              03/15/2022 22:42:11 PAGE 4   

 179   2            {
 180   3              OLED_WR_Byte(fill_Data,1);
 181   3            }
 182   2        }
 183   1      }
 184          
 185          
 186          /***********************Delay****************************************/
 187          void Delay_50ms(unsigned int Del_50ms)
 188          {
 189   1        unsigned int m;
 190   1        for(;Del_50ms>0;Del_50ms--)
 191   1          for(m=6245;m>0;m--);
 192   1      }
 193          
 194          void Delay_1ms(unsigned int Del_1ms)
 195          {
 196   1        unsigned char j;
 197   1        while(Del_1ms--)
 198   1        { 
 199   2          for(j=0;j<123;j++);
 200   2        }
 201   1      }
 202          
 203          //坐标设置
 204          
 205          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 206          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
 207   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 208   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 209   1      }       
 210          //开启OLED显示    
 211          void OLED_Display_On(void)
 212          {
 213   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 214   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 215   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 216   1      }
 217          //关闭OLED显示     
 218          void OLED_Display_Off(void)
 219          {
 220   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 221   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 222   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 223   1      }            
 224          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 225          void OLED_Clear(void)  
 226          {  
 227   1        u8 i,n;       
 228   1        for(i=0;i<8;i++)  
 229   1        {  
 230   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 231   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 232   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 233   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 234   2        } //更新显示
 235   1      }
 236          void OLED_On(void)  
 237          {  
 238   1        u8 i,n;       
 239   1        for(i=0;i<8;i++)  
 240   1        {  
C51 COMPILER V9.60.0.0   OLED                                                              03/15/2022 22:42:11 PAGE 5   

 241   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 242   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 243   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 244   2          for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 245   2        } //更新显示
 246   1      }
 247          //==============================================================
 248          //函数名： void LCD_PutPixel(byte x,byte y)
 249          //功能描述：绘制一个点（x,y）
 250          //参数：真实坐标值(x,y),x的范围0～127，y的范围0～64
 251          //返回：无
 252          //==============================================================
 253          void OLED_PutPixel(u8 x,u8 y)
 254          {
 255   1        u8 data1;  //data1当前点的数据 
 256   1         
 257   1                  OLED_Set_Pos(x,y); 
 258   1        data1 = 0x01<<(y%8);  
 259   1        Write_IIC_Command(0xb0+(y>>3));
 260   1        Write_IIC_Command(((x&0xf0)>>4)|0x10);
 261   1        Write_IIC_Command((x&0x0f)|0x00);
 262   1        Write_IIC_Data(data1);    
 263   1      }
 264          //==============================================================
 265          //函数名： void LCD_Rectangle(byte x1,byte y1,
 266          //                   byte x2,byte y2,byte color,byte gif)
 267          //功能描述：绘制一个实心矩形
 268          //参数：左上角坐标（x1,y1）,右下角坐标（x2，y2）
 269          //      其中x1、x2的范围0～127，y1，y2的范围0～63，即真实坐标值
 270          //返回：无
 271          //==============================================================
 272          void OLED_Rectangle(u8 x1,u8 y1,u8 x2,u8 y2,u8 gif)
 273          {
 274   1        u8 n; 
 275   1          
 276   1        OLED_Set_Pos(x1,y1>>3);
 277   1        for(n=x1;n<=x2;n++)
 278   1        {
 279   2          Write_IIC_Data(0x01<<(y1%8));       
 280   2          if(gif == 1)  delay_ms(50);
 281   2        }  
 282   1        OLED_Set_Pos(x1,y2>>3);
 283   1        for(n=x1;n<=x2;n++)
 284   1        {
 285   2          Write_IIC_Data(0x01<<(y2%8));       
 286   2          if(gif == 1)  delay_ms(5);
 287   2        }
 288   1        
 289   1      }  
 290          //在指定位置显示一个字符,包括部分字符
 291          //x:0~127
 292          //y:0~63
 293          //mode:0,反白显示;1,正常显示         
 294          //size:选择字体 16/12 
 295          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 296          {       
 297   1        unsigned char c=0,i=0;  
 298   1          c=chr-' ';//得到偏移后的值      
 299   1          if(x>Max_Column-1){x=0;y=y+2;}
 300   1          if(Char_Size ==16)
 301   1            {
 302   2            OLED_Set_Pos(x,y);  
C51 COMPILER V9.60.0.0   OLED                                                              03/15/2022 22:42:11 PAGE 6   

 303   2            for(i=0;i<8;i++)
 304   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 305   2            OLED_Set_Pos(x,y+1);
 306   2            for(i=0;i<8;i++)
 307   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 308   2            }
 309   1            else {  
 310   2              OLED_Set_Pos(x,y);
 311   2              for(i=0;i<6;i++)
 312   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 313   2              
 314   2            }
 315   1      }
 316          //m^n函数
 317          u32 oled_pow(u8 m,u8 n)
 318          {
 319   1        u32 result=1;  
 320   1        while(n--)result*=m;    
 321   1        return result;
 322   1      }         
 323          //显示2个数字
 324          //x,y :起点坐标  
 325          //len :数字的位数
 326          //size:字体大小
 327          //mode:模式 0,填充模式;1,叠加模式
 328          //num:数值(0~4294967295);可为负数       
 329          void OLED_ShowNum(u8 x,u8 y,int num,u8 len,u8 size2)
 330          {           
 331   1        u8 t,temp;
 332   1        u8 enshow=0;
 333   1                  if(num<0)
 334   1        {
 335   2           OLED_ShowChar(x,y,'-',size2);  
 336   2            num=(-num);
 337   2            x=x+(size2/2);  
 338   2          
 339   2        }   
 340   1        for(t=0;t<len;t++)
 341   1        {
 342   2          temp=(num/oled_pow(10,len-t-1))%10;
 343   2          if(enshow==0&&t<(len-1))
 344   2          {
 345   3            if(temp==0)
 346   3            {
 347   4              OLED_ShowChar(x+(size2/2)*t,y,'0',size2);
 348   4              continue;
 349   4            }else enshow=1; 
 350   3             
 351   3          }
 352   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 353   2        }
 354   1      } 
 355          //显示一个字符号串
 356          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 357          {
 358   1        unsigned char j=0;
 359   1        while (chr[j]!='\0')
 360   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 361   2            x+=8;
 362   2          if(x>120){x=0;y+=2;}
 363   2            j++;
 364   2        }
C51 COMPILER V9.60.0.0   OLED                                                              03/15/2022 22:42:11 PAGE 7   

 365   1      }
 366          //显示汉字
 367          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 368          {               
 369   1        u8 t,adder=0;
 370   1        OLED_Set_Pos(x,y);  
 371   1          for(t=0;t<16;t++)
 372   1          {
 373   2        OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 374   2        adder+=1;
 375   2          } 
 376   1           OLED_Set_Pos(x,y+1); 
 377   1          for(t=0;t<16;t++)
 378   1            { 
 379   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 380   2              adder+=1;
 381   2            }         
 382   1      }
 383          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 384          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 385          {   
 386   1       unsigned int j=0;
 387   1       unsigned char x,y;
 388   1        
 389   1        if(y1%8==0) y=y1/8;      
 390   1        else y=y1/8+1;
 391   1        for(y=y0;y<y1;y++)
 392   1        {
 393   2          OLED_Set_Pos(x0,y);
 394   2          for(x=x0;x<x1;x++)
 395   2            {      
 396   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 397   3            }
 398   2        }
 399   1      } 
 400          
 401          
 402          //初始化SSD1306             
 403          void OLED_Init(void)
 404          {   
 405   1       
 406   1          OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 407   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 408   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 409   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 410   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 411   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 412   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 413   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 414   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 415   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 416   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 417   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 418   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 419   1        OLED_WR_Byte(0x00,OLED_CMD);//
 420   1        
 421   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 422   1        OLED_WR_Byte(0x80,OLED_CMD);//
 423   1        
 424   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
C51 COMPILER V9.60.0.0   OLED                                                              03/15/2022 22:42:11 PAGE 8   

 425   1        OLED_WR_Byte(0x05,OLED_CMD);//
 426   1        
 427   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 428   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 429   1        
 430   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 431   1        OLED_WR_Byte(0x12,OLED_CMD);//
 432   1        
 433   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 434   1        OLED_WR_Byte(0x30,OLED_CMD);//
 435   1        
 436   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 437   1        OLED_WR_Byte(0x14,OLED_CMD);//
 438   1        
 439   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 440   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1859    ----
   CONSTANT SIZE    =   2904    ----
   XDATA SIZE       =   ----      49
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
