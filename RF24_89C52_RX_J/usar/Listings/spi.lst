C51 COMPILER V9.54   SPI                                                                   08/10/2018 11:14:34 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SPI
OBJECT MODULE PLACED IN .\spi.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\Common\spi.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include) D
                    -EBUG PRINT(.\Listings\spi.lst) OBJECT(.\spi.obj)

line level    source

   1          /*
   2          
   3              GT-24 V1.0 (RF24L01) 测试开发程序
   4          
   5              编者：果云科技有限公司
   6                  淘宝店铺:https://shop532831232.taobao.com
   7                  
   8                  适用芯片：89C52
   9                  
  10                  线路连接：  RF24L01： VCC        3.3V
  11                                                       GND        GND
  12                                                            CE        P1^0
  13                                                           IRQ        P1^5
  14                                   CSN        P1^3
  15                                                       SCK        P1^1
  16                                                          MOSI        P1^4
  17                                                          MISO        P1^2
  18                                                          
  19                              OLED(IIC):  VCC        3.3V
  20                                                  GND        GND
  21                                                          SCL        P1^6
  22                                                          SDA        P1^7
  23                                                          
  24              最后修改时间；2018年8月1日 12:00:00
  25          
  26          */
  27          #include "spi.h"
  28          
  29          
  30          /**
  31            * @brief :SPI初始化(软件)
  32            * @param :无
  33            * @note  :无
  34            * @retval:无
  35            */
  36          void drv_spi_init( void )
  37          {
  38   1              //引脚配置 部分51单片机不需要
  39   1              //SCK MOSI NSS 配置为推挽输出
  40   1              SPI_SCK_PxM0 = IO_OUT_PUT_PP_M0 << SPI_SCK_PIN_BIT;
  41   1              SPI_SCK_PxM1 = IO_OUT_PUT_PP_M1 << SPI_SCK_PIN_BIT;
  42   1              
  43   1              SPI_MOSI_PxM0 = IO_OUT_PUT_PP_M0 << SPI_MOSI_PIN_BIT;
  44   1              SPI_MOSI_PxM1 = IO_OUT_PUT_PP_M1 << SPI_MOSI_PIN_BIT;
  45   1              
  46   1              SPI_NSS_PxM0 = IO_OUT_PUT_PP_M0 << SPI_NSS_PIN_BIT;
  47   1              SPI_NSS_PxM1 = IO_OUT_PUT_PP_M1 << SPI_NSS_PIN_BIT;
  48   1              
  49   1              //MISO 配置为输入
  50   1              SPI_MISO_PxM0 = IO_IN_PUT_ONLY_M0 << SPI_MISO_PIN_BIT;
  51   1              SPI_MISO_PxM1 = IO_IN_PUT_ONLY_M1 << SPI_MISO_PIN_BIT;
  52   1              
  53   1              //时钟置低
  54   1              SPI_SCK = 0;    
C51 COMPILER V9.54   SPI                                                                   08/10/2018 11:14:34 PAGE 2   

  55   1              //MOSI MISO NSS置高
  56   1              SPI_MOSI = 1;           
  57   1              SPI_MISO = 1;
  58   1              SPI_NSS = 1;    
  59   1      }
  60          
  61          /**
  62            * @brief :SPI收发一个字节
  63            * @param :
  64            *                     @TxByte: 发送的数据字节
  65            * @note  :非堵塞式，一旦等待超时，函数会自动退出
  66            * @retval:接收到的字节
  67            */
  68          uint8_t drv_spi_read_write_byte( uint8_t TxByte )
  69          {
  70   1              uint8_t i = 0, Data = 0;
  71   1              
  72   1              spi_set_clk_low( );
  73   1              
  74   1              for( i = 0; i < 8; i++ )                        //一个字节8byte需要循环8次
  75   1              {
  76   2                      /** 发送 */
  77   2                      if( 0x80 == ( TxByte & 0x80 ))
  78   2                      {
  79   3                              spi_set_mosi_hight( );          //如果即将要发送的位为 1 则置高IO引脚
  80   3                      }
  81   2                      else
  82   2                      {
  83   3                              spi_set_mosi_low( );            //如果即将要发送的位为 0 则置低IO引脚
  84   3                      }
  85   2                      TxByte <<= 1;                                   //数据左移一位，先发送的是最高位
  86   2                      spi_set_clk_high( );                    //时钟线置高
  87   2                      _nop_( );
  88   2              
  89   2                      /** 接收 */
  90   2                      Data <<= 1;                                             //接收数据左移一位，先接收到的是最高位
  91   2                      if( 1 == spi_get_miso( ))
  92   2                      {
  93   3                              Data |= 0x01;                           //如果接收时IO引脚为高则认为接收到 1
  94   3                      }
  95   2                      
  96   2                      spi_set_clk_low( );                             //时钟线置低
  97   2                      _nop_( );
  98   2              }
  99   1              
 100   1              return Data;            //返回接收到的字节
 101   1      }
 102          
 103          /**
 104            * @brief :SPI收发字符串
 105            * @param :
 106            *                     @ReadBuffer: 接收数据缓冲区地址
 107            *                     @WriteBuffer:发送字节缓冲区地址
 108            *                     @Length:字节长度
 109            * @note  :非堵塞式，一旦等待超时，函数会自动退出
 110            * @retval:无
 111            */
 112          void drv_spi_read_write_string( uint8_t* ReadBuffer, uint8_t* WriteBuffer, uint16_t Length )
 113          {
 114   1              spi_set_nss_low( );                     //片选拉低
 115   1              
 116   1              while( Length-- )
C51 COMPILER V9.54   SPI                                                                   08/10/2018 11:14:34 PAGE 3   

 117   1              {
 118   2                      *ReadBuffer = drv_spi_read_write_byte( *WriteBuffer );          //收发数据
 119   2                      ReadBuffer++;
 120   2                      WriteBuffer++;                  //读写地址加1
 121   2              }
 122   1              
 123   1              spi_set_nss_high( );            //片选拉高
 124   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    166    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
